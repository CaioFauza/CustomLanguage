
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUALNOTEQUALnonassocBIGGERSMALLERBIGGEREQUALSMALLEREQUALleftPLUSMINUSleftMULTDIVrightUMINUSUPLUSUNOTAND ATTRIB BIGGER BIGGEREQUAL CLOSEBLOCK DIV ELSE EQUAL FALSE FOR FUNCTION IDENTIFIER IF INPUT LPAR MINUS MULT NOT NOTEQUAL NUMBER OPENBLOCK OR PLUS PRINT RETURN RPAR SEMICOLLON SMALLER SMALLEREQUAL STRING TRUE WHILEblock : OPENBLOCK listcommand CLOSEBLOCKlistcommand : listcommand command \n                   | commandcommand : IDENTIFIER ATTRIB orexpr SEMICOLLON\n               | PRINT LPAR orexpr RPAR SEMICOLLON\n               | block\n               | WHILE LPAR orexpr RPAR command\n               | IF LPAR orexpr RPAR command\n               | IF LPAR orexpr RPAR command ELSE commandorexpr : orexpr OR andexpr\n              | andexprandexpr : andexpr AND eqexpr\n              | eqexpreqexpr : eqexpr EQUAL relexpr\n               | eqexpr NOTEQUAL relexpr\n               | relexprrelexpr : relexpr BIGGER expression\n               | relexpr SMALLER expression\n               | relexpr BIGGEREQUAL expression\n               | relexpr SMALLEREQUAL expression\n               | expressionexpression : expression PLUS term\n                  | expression MINUS term\n                  | termterm : term MULT factor\n            | term DIV factor\n            | factorfactor : NUMBER\n              | IDENTIFIER\n              | TRUE\n              | FALSE\n              | STRING\n              | LPAR orexpr RPAR \n              | PLUS factor %prec UPLUS\n              | MINUS factor %prec UMINUS\n              | NOT factor %prec UNOT\n              | INPUT LPAR RPAR'
    
_lr_action_items = {'OPENBLOCK':([0,2,3,4,7,10,11,36,55,56,71,72,73,74,75,],[2,2,2,-3,-6,-1,-2,-4,2,2,-5,-7,-8,2,-9,]),'$end':([1,10,],[0,-1,]),'IDENTIFIER':([2,3,4,7,10,11,12,13,14,15,22,24,30,31,36,37,38,39,40,41,42,43,44,45,46,48,49,55,56,71,72,73,74,75,],[5,5,-3,-6,-1,-2,16,16,16,16,16,16,16,16,-4,16,16,16,16,16,16,16,16,16,16,16,16,5,5,-5,-7,-8,5,-9,]),'PRINT':([2,3,4,7,10,11,36,55,56,71,72,73,74,75,],[6,6,-3,-6,-1,-2,-4,6,6,-5,-7,-8,6,-9,]),'WHILE':([2,3,4,7,10,11,36,55,56,71,72,73,74,75,],[8,8,-3,-6,-1,-2,-4,8,8,-5,-7,-8,8,-9,]),'IF':([2,3,4,7,10,11,36,55,56,71,72,73,74,75,],[9,9,-3,-6,-1,-2,-4,9,9,-5,-7,-8,9,-9,]),'CLOSEBLOCK':([3,4,7,10,11,36,71,72,73,75,],[10,-3,-6,-1,-2,-4,-5,-7,-8,-9,]),'ATTRIB':([5,],[12,]),'LPAR':([6,8,9,12,13,14,15,22,24,30,31,32,37,38,39,40,41,42,43,44,45,46,48,49,],[13,14,15,30,30,30,30,30,30,30,30,53,30,30,30,30,30,30,30,30,30,30,30,30,]),'ELSE':([7,10,36,71,72,73,75,],[-6,-1,-4,-5,-7,74,-9,]),'NUMBER':([12,13,14,15,22,24,30,31,37,38,39,40,41,42,43,44,45,46,48,49,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TRUE':([12,13,14,15,22,24,30,31,37,38,39,40,41,42,43,44,45,46,48,49,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'FALSE':([12,13,14,15,22,24,30,31,37,38,39,40,41,42,43,44,45,46,48,49,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'STRING':([12,13,14,15,22,24,30,31,37,38,39,40,41,42,43,44,45,46,48,49,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'PLUS':([12,13,14,15,16,21,22,23,24,25,26,27,28,29,30,31,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,61,62,63,64,65,66,67,68,69,70,],[22,22,22,22,-29,45,22,-24,22,-27,-28,-30,-31,-32,22,22,22,22,22,22,22,22,22,22,22,22,-34,22,22,-35,-36,45,45,45,45,-22,-23,-25,-26,-33,-37,]),'MINUS':([12,13,14,15,16,21,22,23,24,25,26,27,28,29,30,31,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,61,62,63,64,65,66,67,68,69,70,],[24,24,24,24,-29,46,24,-24,24,-27,-28,-30,-31,-32,24,24,24,24,24,24,24,24,24,24,24,24,-34,24,24,-35,-36,46,46,46,46,-22,-23,-25,-26,-33,-37,]),'NOT':([12,13,14,15,22,24,30,31,37,38,39,40,41,42,43,44,45,46,48,49,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'INPUT':([12,13,14,15,22,24,30,31,37,38,39,40,41,42,43,44,45,46,48,49,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'MULT':([16,23,25,26,27,28,29,47,50,52,65,66,67,68,69,70,],[-29,48,-27,-28,-30,-31,-32,-34,-35,-36,48,48,-25,-26,-33,-37,]),'DIV':([16,23,25,26,27,28,29,47,50,52,65,66,67,68,69,70,],[-29,49,-27,-28,-30,-31,-32,-34,-35,-36,49,49,-25,-26,-33,-37,]),'BIGGER':([16,20,21,23,25,26,27,28,29,47,50,52,59,60,61,62,63,64,65,66,67,68,69,70,],[-29,41,-21,-24,-27,-28,-30,-31,-32,-34,-35,-36,41,41,-17,-18,-19,-20,-22,-23,-25,-26,-33,-37,]),'SMALLER':([16,20,21,23,25,26,27,28,29,47,50,52,59,60,61,62,63,64,65,66,67,68,69,70,],[-29,42,-21,-24,-27,-28,-30,-31,-32,-34,-35,-36,42,42,-17,-18,-19,-20,-22,-23,-25,-26,-33,-37,]),'BIGGEREQUAL':([16,20,21,23,25,26,27,28,29,47,50,52,59,60,61,62,63,64,65,66,67,68,69,70,],[-29,43,-21,-24,-27,-28,-30,-31,-32,-34,-35,-36,43,43,-17,-18,-19,-20,-22,-23,-25,-26,-33,-37,]),'SMALLEREQUAL':([16,20,21,23,25,26,27,28,29,47,50,52,59,60,61,62,63,64,65,66,67,68,69,70,],[-29,44,-21,-24,-27,-28,-30,-31,-32,-34,-35,-36,44,44,-17,-18,-19,-20,-22,-23,-25,-26,-33,-37,]),'EQUAL':([16,19,20,21,23,25,26,27,28,29,47,50,52,58,59,60,61,62,63,64,65,66,67,68,69,70,],[-29,39,-16,-21,-24,-27,-28,-30,-31,-32,-34,-35,-36,39,-14,-15,-17,-18,-19,-20,-22,-23,-25,-26,-33,-37,]),'NOTEQUAL':([16,19,20,21,23,25,26,27,28,29,47,50,52,58,59,60,61,62,63,64,65,66,67,68,69,70,],[-29,40,-16,-21,-24,-27,-28,-30,-31,-32,-34,-35,-36,40,-14,-15,-17,-18,-19,-20,-22,-23,-25,-26,-33,-37,]),'AND':([16,18,19,20,21,23,25,26,27,28,29,47,50,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,],[-29,38,-13,-16,-21,-24,-27,-28,-30,-31,-32,-34,-35,-36,38,-12,-14,-15,-17,-18,-19,-20,-22,-23,-25,-26,-33,-37,]),'SEMICOLLON':([16,17,18,19,20,21,23,25,26,27,28,29,47,50,52,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,],[-29,36,-11,-13,-16,-21,-24,-27,-28,-30,-31,-32,-34,-35,-36,71,-10,-12,-14,-15,-17,-18,-19,-20,-22,-23,-25,-26,-33,-37,]),'OR':([16,17,18,19,20,21,23,25,26,27,28,29,33,34,35,47,50,51,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,],[-29,37,-11,-13,-16,-21,-24,-27,-28,-30,-31,-32,37,37,37,-34,-35,37,-36,-10,-12,-14,-15,-17,-18,-19,-20,-22,-23,-25,-26,-33,-37,]),'RPAR':([16,18,19,20,21,23,25,26,27,28,29,33,34,35,47,50,51,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,],[-29,-11,-13,-16,-21,-24,-27,-28,-30,-31,-32,54,55,56,-34,-35,69,-36,70,-10,-12,-14,-15,-17,-18,-19,-20,-22,-23,-25,-26,-33,-37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,2,3,55,56,74,],[1,7,7,7,7,7,]),'listcommand':([2,],[3,]),'command':([2,3,55,56,74,],[4,11,72,73,75,]),'orexpr':([12,13,14,15,30,],[17,33,34,35,51,]),'andexpr':([12,13,14,15,30,37,],[18,18,18,18,18,57,]),'eqexpr':([12,13,14,15,30,37,38,],[19,19,19,19,19,19,58,]),'relexpr':([12,13,14,15,30,37,38,39,40,],[20,20,20,20,20,20,20,59,60,]),'expression':([12,13,14,15,30,37,38,39,40,41,42,43,44,],[21,21,21,21,21,21,21,21,21,61,62,63,64,]),'term':([12,13,14,15,30,37,38,39,40,41,42,43,44,45,46,],[23,23,23,23,23,23,23,23,23,23,23,23,23,65,66,]),'factor':([12,13,14,15,22,24,30,31,37,38,39,40,41,42,43,44,45,46,48,49,],[25,25,25,25,47,50,25,52,25,25,25,25,25,25,25,25,25,25,67,68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> OPENBLOCK listcommand CLOSEBLOCK','block',3,'p_block','main.py',79),
  ('listcommand -> listcommand command','listcommand',2,'p_listcommand','main.py',84),
  ('listcommand -> command','listcommand',1,'p_listcommand','main.py',85),
  ('command -> IDENTIFIER ATTRIB orexpr SEMICOLLON','command',4,'p_command','main.py',94),
  ('command -> PRINT LPAR orexpr RPAR SEMICOLLON','command',5,'p_command','main.py',95),
  ('command -> block','command',1,'p_command','main.py',96),
  ('command -> WHILE LPAR orexpr RPAR command','command',5,'p_command','main.py',97),
  ('command -> IF LPAR orexpr RPAR command','command',5,'p_command','main.py',98),
  ('command -> IF LPAR orexpr RPAR command ELSE command','command',7,'p_command','main.py',99),
  ('orexpr -> orexpr OR andexpr','orexpr',3,'p_orexpr','main.py',117),
  ('orexpr -> andexpr','orexpr',1,'p_orexpr','main.py',118),
  ('andexpr -> andexpr AND eqexpr','andexpr',3,'p_andexpr','main.py',125),
  ('andexpr -> eqexpr','andexpr',1,'p_andexpr','main.py',126),
  ('eqexpr -> eqexpr EQUAL relexpr','eqexpr',3,'p_eqexpr','main.py',133),
  ('eqexpr -> eqexpr NOTEQUAL relexpr','eqexpr',3,'p_eqexpr','main.py',134),
  ('eqexpr -> relexpr','eqexpr',1,'p_eqexpr','main.py',135),
  ('relexpr -> relexpr BIGGER expression','relexpr',3,'p_relexpr','main.py',142),
  ('relexpr -> relexpr SMALLER expression','relexpr',3,'p_relexpr','main.py',143),
  ('relexpr -> relexpr BIGGEREQUAL expression','relexpr',3,'p_relexpr','main.py',144),
  ('relexpr -> relexpr SMALLEREQUAL expression','relexpr',3,'p_relexpr','main.py',145),
  ('relexpr -> expression','relexpr',1,'p_relexpr','main.py',146),
  ('expression -> expression PLUS term','expression',3,'p_expression','main.py',153),
  ('expression -> expression MINUS term','expression',3,'p_expression','main.py',154),
  ('expression -> term','expression',1,'p_expression','main.py',155),
  ('term -> term MULT factor','term',3,'p_term','main.py',162),
  ('term -> term DIV factor','term',3,'p_term','main.py',163),
  ('term -> factor','term',1,'p_term','main.py',164),
  ('factor -> NUMBER','factor',1,'p_factor','main.py',171),
  ('factor -> IDENTIFIER','factor',1,'p_factor','main.py',172),
  ('factor -> TRUE','factor',1,'p_factor','main.py',173),
  ('factor -> FALSE','factor',1,'p_factor','main.py',174),
  ('factor -> STRING','factor',1,'p_factor','main.py',175),
  ('factor -> LPAR orexpr RPAR','factor',3,'p_factor','main.py',176),
  ('factor -> PLUS factor','factor',2,'p_factor','main.py',177),
  ('factor -> MINUS factor','factor',2,'p_factor','main.py',178),
  ('factor -> NOT factor','factor',2,'p_factor','main.py',179),
  ('factor -> INPUT LPAR RPAR','factor',3,'p_factor','main.py',180),
]
